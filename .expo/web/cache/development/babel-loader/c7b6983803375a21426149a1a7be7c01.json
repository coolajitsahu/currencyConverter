{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ajit Sahu\\\\Desktop\\\\My_Work_Shop\\\\CurrencyConverter\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nvar currencyPerRupee = {\n  DOLLAR: 0.014,\n  EURO: 0.012,\n  POUND: 0.011,\n  RUBEL: 0.93,\n  AUSDOLLER: 0.2,\n  CANDOLLER: 0.019,\n  YEN: 1.54,\n  DINAR: 0.0043,\n  BITCOIN: 0.0000041\n};\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.buttonPressed = function (currency) {\n      if (_this.state.inputValue == \"\") {\n        Alert.alert(\"Enter some value\");\n      }\n\n      var result = parseFloat(_this.state.inputValue) * currencyPerRupee[currency];\n\n      _this.setState({\n        resultValue: result.toFixed(2)\n      });\n    };\n\n    _this.state = {\n      inputValue: \"\",\n      resultValue: \"0.0\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 6\n        }\n      }, React.createElement(View, {\n        style: styles.screenview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.resultcontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.resultvalue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }\n      }, this.state.resultValue)), React.createElement(View, {\n        style: styles.inputcontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        selectionColor: \"#FFF\",\n        keyboardType: \"numeric\",\n        placeholder: \"Enter value\",\n        value: this.state.inputValue,\n        onChangeText: function onChangeText(inputValue) {\n          return _this2.setState({\n            inputValue: inputValue\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.conterterbuttoncontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 12\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.buttonPressed(\"DOLLAR\");\n        },\n        style: styles.converterbutton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.converterbuttontext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }\n      }, \"$\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.buttonPressed(\"EURO\");\n        },\n        style: styles.converterbutton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.converterbuttontext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }\n      }, \"EURO\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.buttonPressed(\"POUND\");\n        },\n        style: styles.converterbutton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: styles.converterbuttontext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, \"POUND\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.buttonPressed(\"RUBEL\");\n        },\n        style: styles.converterbutton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: styles.converterbuttontext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }, \"RUBEL\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.buttonPressed(\"AUSDOLLER\");\n        },\n        style: styles.converterbutton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: styles.converterbuttontext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, \"AUSDOLLER\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.buttonPressed(\"CANDOLLER\");\n        },\n        style: styles.converterbutton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: styles.converterbuttontext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      }, \"CANDOLLER\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.buttonPressed(\"YEN\");\n        },\n        style: styles.converterbutton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: styles.converterbuttontext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }, \"YEN\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.buttonPressed(\"DINAR\");\n        },\n        style: styles.converterbutton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: styles.converterbuttontext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }\n      }, \"DINAR\")), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.buttonPressed(\"BITCOIN\");\n        },\n        style: styles.converterbutton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 14\n        }\n      }, React.createElement(Text, {\n        style: styles.converterbuttontext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }\n      }, \"BITCOIN\")))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20,\n    backgroundColor: '#535C63',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  resultcontainer: {\n    height: 70,\n    width: Dimensions.get('window').width,\n    marginTop: 80,\n    justifyContent: \"center\",\n    borderColor: \"#c1c1c1\",\n    backgroundColor: \"#0A79DE\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    borderWidth: 2\n  },\n  resultvalue: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    color: \"#FFF\"\n  },\n  screenview: {\n    flex: 1\n  },\n  inputcontainer: {\n    height: 70,\n    marginTop: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderColor: \"#c1c1c1\",\n    borderWidth: 2,\n    backgroundColor: \"#0A79DE\"\n  },\n  input: {\n    color: \"#FFF\",\n    fontSize: 30\n  },\n  conterterbuttoncontainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    marginTop: 20,\n    borderColor: \"#c1c1c1\",\n    borderWidth: 3\n  },\n  converterbutton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#0A79DF\",\n    height: 100,\n    borderColor: \"#c1c1c1\",\n    borderWidth: 2,\n    width: \"33.3%\"\n  },\n  converterbuttontext: {\n    color: \"#FFF\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Ajit Sahu/Desktop/My_Work_Shop/CurrencyConverter/App.js"],"names":["React","currencyPerRupee","DOLLAR","EURO","POUND","RUBEL","AUSDOLLER","CANDOLLER","YEN","DINAR","BITCOIN","App","props","buttonPressed","currency","state","inputValue","Alert","alert","result","parseFloat","setState","resultValue","toFixed","styles","container","screenview","resultcontainer","resultvalue","inputcontainer","input","conterterbuttoncontainer","converterbutton","converterbuttontext","Component","StyleSheet","create","flex","marginTop","backgroundColor","alignItems","justifyContent","height","width","Dimensions","get","borderColor","borderRadius","borderWidth","fontSize","fontWeight","color","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet,Text, View, SafeAreaView,Dimensions, TextInput, TouchableOpacity, Alert, TouchableWithoutFeedback, Keyboard } from 'react-native';\n\nconst currencyPerRupee={\n  DOLLAR:0.014,\n  EURO:0.012,\n  POUND:0.011,\n  RUBEL:0.93,\n  AUSDOLLER:0.2,\n  CANDOLLER:0.019,\n  YEN:1.54,\n  DINAR:0.0043,\n  BITCOIN:0.0000041,\n}\nexport default class App extends React.Component { \nconstructor(props){\n  super(props);\n  this.state={\n    inputValue:\"\",\n    resultValue:\"0.0\",\n  }\n}\nbuttonPressed=(currency)=>{\n  if(this.state.inputValue==\"\"){\n    Alert.alert(\"Enter some value\");\n  }\n     let result =parseFloat(this.state.inputValue)*currencyPerRupee[currency];\n     this.setState({resultValue:result.toFixed(2)})\n\n}\n\nrender(){\n   return (\n    // <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n     <SafeAreaView style={styles.container}>\n        <View style={styles.screenview}>\n          <View style={styles.resultcontainer}>\n              <Text style={styles.resultvalue} >\n                  {this.state.resultValue}\n              </Text> \n          </View>\n          <View style={styles.inputcontainer}>\n            <TextInput\n            style={styles.input}\n            selectionColor=\"#FFF\"\n            keyboardType=\"numeric\"\n            placeholder=\"Enter value\"\n            value={this.state.inputValue}\n            onChangeText={inputValue=>this.setState({\n                inputValue\n            })}\n            />\n          </View>\n           <View style={styles.conterterbuttoncontainer}>\n              <TouchableOpacity \n               onPress={()=>this.buttonPressed(\"DOLLAR\")}\n               style={styles.converterbutton}>\n                   <Text style={styles.converterbuttontext}>\n                   $\n                   </Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity \n              onPress={()=>this.buttonPressed(\"EURO\")}\n              style={styles.converterbutton}>\n                  <Text style={styles.converterbuttontext}>\n                  EURO\n                  </Text>\n             </TouchableOpacity>\n\n             <TouchableOpacity \n              onPress={()=>this.buttonPressed(\"POUND\")}\n              style={styles.converterbutton}>\n                  <Text style={styles.converterbuttontext}>\n                  POUND\n                  </Text>\n             </TouchableOpacity>\n             <TouchableOpacity \n              onPress={()=>this.buttonPressed(\"RUBEL\")}\n              style={styles.converterbutton}>\n                  <Text style={styles.converterbuttontext}>\n                  RUBEL\n                  </Text>\n             </TouchableOpacity>\n             <TouchableOpacity \n              onPress={()=>this.buttonPressed(\"AUSDOLLER\")}\n              style={styles.converterbutton}>\n                  <Text style={styles.converterbuttontext}>\n                  AUSDOLLER\n                  </Text>\n             </TouchableOpacity>\n             <TouchableOpacity \n              onPress={()=>this.buttonPressed(\"CANDOLLER\")}\n              style={styles.converterbutton}>\n                  <Text style={styles.converterbuttontext}>\n                  CANDOLLER\n                  </Text>\n             </TouchableOpacity>\n             <TouchableOpacity \n              onPress={()=>this.buttonPressed(\"YEN\")}\n              style={styles.converterbutton}>\n                  <Text style={styles.converterbuttontext}>\n                  YEN\n                  </Text>\n             </TouchableOpacity>\n             <TouchableOpacity \n              onPress={()=>this.buttonPressed(\"DINAR\")}\n              style={styles.converterbutton}>\n                  <Text style={styles.converterbuttontext}>\n                  DINAR\n                  </Text>\n             </TouchableOpacity>\n             <TouchableOpacity \n              onPress={()=>this.buttonPressed(\"BITCOIN\")}\n              style={styles.converterbutton}>\n                  <Text style={styles.converterbuttontext}>\n                  BITCOIN\n                  </Text>\n             </TouchableOpacity>\n             \n\n               \n           </View>\n        </View>\n      </SafeAreaView>\n     // </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n   container: {\n     flex: 1,\n     marginTop:20,\n     backgroundColor: '#535C63',\n     alignItems: 'center',\n     justifyContent: 'center',\n   },\n   resultcontainer:{\n      height:70,\n      width: Dimensions.get('window').width,\n      marginTop:80,\n      justifyContent:\"center\",\n      borderColor:\"#c1c1c1\",\n      backgroundColor:\"#0A79DE\",\n      alignItems:\"center\",\n      borderRadius:10,\n      borderWidth:2,\n   },\n   resultvalue:{\n      fontSize:40,\n      fontWeight:\"bold\",\n      color:\"#FFF\"\n   },\n  screenview:{\n    flex:1,\n  },\n  inputcontainer:{\n     height:70,\n     marginTop:10,\n     justifyContent:\"center\",\n     alignItems:\"center\",\n     borderColor:\"#c1c1c1\",\n     borderWidth:2,\n     backgroundColor:\"#0A79DE\"\n  },\n  input:{\n     color:\"#FFF\",\n     fontSize:30,\n  },\n  conterterbuttoncontainer:{\n      flexDirection:\"row\",\n      flexWrap:\"wrap\",\n      marginTop:20,\n      borderColor:\"#c1c1c1\",\n      borderWidth:3,\n  },\n  converterbutton:{\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    backgroundColor:\"#0A79DF\",\n    height:100,\n    borderColor:\"#c1c1c1\",\n    borderWidth:2, \n    width:\"33.3%\"\n  },\n  converterbuttontext:{\n     color:\"#FFF\",\n     fontSize:20,\n     fontWeight:\"bold\",\n\n     \n     \n  }\n\n});\n"]},"metadata":{},"sourceType":"module"}